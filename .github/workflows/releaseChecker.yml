name: Create Extension Release

on:
  push: 
    branches: [release]
jobs:
  cicd:
    name: Create Extension Release
    runs-on: windows-latest
    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: fetch all history and tags from all branches for gitversion
        run: git fetch --prune --unshallow

      - name: install gitversion tool
        uses: gittools/actions/gitversion/setup@v0.9
        with:
            versionSpec: '5.1.x'
      
      - name: execute gitversion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v0.9
        
      - name: print gitversion
        run: |
          echo "Major: ${{ steps.gitversion.outputs.major }}"
          echo "Minor: ${{ steps.gitversion.outputs.minor }}"
          echo "Patch: ${{ steps.gitversion.outputs.patch }}"
          echo "MajorMinorPatch: ${{ steps.gitversion.outputs.majorMinorPatch }}"
          echo "SemVer: ${{ steps.gitversion.outputs.semVer }}"

      - name: setup node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'
        
      - name: clean install vscode cli
        run: npm ci
      - name: update metadata in package.json
        uses: onlyutkarsh/patch-files-action@v1.0.1
        with:
          files: '${{github.workspace}}/package.json'
          patch-syntax: |
            = /version => "${{ steps.gitversion.outputs.semVer }}"
            = /displayName => "TyD"
            = /description => "TyD implementation into Visual Studio Code"
      - name: compile and create vsix
        run: npm run package
      - name: print vsix path
        run: |
          echo "VSIX Path: ${{ env.vsix_path }}"
      - name: upload vsix as artifact
        uses: actions/upload-artifact@v1
        with:
          name: tyd-lang-${{steps.gitversion.outputs.semVer}}.vsix
          path: ${{github.workspace}}/tyd-lang-${{steps.gitversion.outputs.semVer}}.vsix
      - name: create a release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # pre provided by github
        with:
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          release_name: tyd-lang v${{ steps.gitversion.outputs.semVer }}
      - name: publish to marketplace
        run: vsce publish -p ${{ env.PAI_TOKEN }}